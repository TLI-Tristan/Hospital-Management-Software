//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hospital_Management_Software.MyDBServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentServiceRecord", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class EquipmentServiceRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int employeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string serialNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int employeeID {
            get {
                return this.employeeIDField;
            }
            set {
                if ((this.employeeIDField.Equals(value) != true)) {
                    this.employeeIDField = value;
                    this.RaisePropertyChanged("employeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.serialNumberField, value) != true)) {
                    this.serialNumberField = value;
                    this.RaisePropertyChanged("serialNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LabServiceRecord", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class LabServiceRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int employeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int priorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string testRequiredField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int employeeID {
            get {
                return this.employeeIDField;
            }
            set {
                if ((this.employeeIDField.Equals(value) != true)) {
                    this.employeeIDField = value;
                    this.RaisePropertyChanged("employeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                if ((this.priorityField.Equals(value) != true)) {
                    this.priorityField = value;
                    this.RaisePropertyChanged("priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                if ((object.ReferenceEquals(this.remarksField, value) != true)) {
                    this.remarksField = value;
                    this.RaisePropertyChanged("remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string testRequired {
            get {
                return this.testRequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.testRequiredField, value) != true)) {
                    this.testRequiredField = value;
                    this.RaisePropertyChanged("testRequired");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resource", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class Resource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RolePermission", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class RolePermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool addField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool deleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool editField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int resourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int roleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool viewField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool add {
            get {
                return this.addField;
            }
            set {
                if ((this.addField.Equals(value) != true)) {
                    this.addField = value;
                    this.RaisePropertyChanged("add");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool delete {
            get {
                return this.deleteField;
            }
            set {
                if ((this.deleteField.Equals(value) != true)) {
                    this.deleteField = value;
                    this.RaisePropertyChanged("delete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool edit {
            get {
                return this.editField;
            }
            set {
                if ((this.editField.Equals(value) != true)) {
                    this.editField = value;
                    this.RaisePropertyChanged("edit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int resourceID {
            get {
                return this.resourceIDField;
            }
            set {
                if ((this.resourceIDField.Equals(value) != true)) {
                    this.resourceIDField = value;
                    this.RaisePropertyChanged("resourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int roleID {
            get {
                return this.roleIDField;
            }
            set {
                if ((this.roleIDField.Equals(value) != true)) {
                    this.roleIDField = value;
                    this.RaisePropertyChanged("roleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool view {
            get {
                return this.viewField;
            }
            set {
                if ((this.viewField.Equals(value) != true)) {
                    this.viewField = value;
                    this.RaisePropertyChanged("view");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalRecord", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class MedicalRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bloodPressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bodyTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime consultationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string diagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int doctorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int medicalRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int patientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string prescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pulseRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string respirationRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string treatmentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bloodPressure {
            get {
                return this.bloodPressureField;
            }
            set {
                if ((object.ReferenceEquals(this.bloodPressureField, value) != true)) {
                    this.bloodPressureField = value;
                    this.RaisePropertyChanged("bloodPressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bodyTemperature {
            get {
                return this.bodyTemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.bodyTemperatureField, value) != true)) {
                    this.bodyTemperatureField = value;
                    this.RaisePropertyChanged("bodyTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime consultationDate {
            get {
                return this.consultationDateField;
            }
            set {
                if ((this.consultationDateField.Equals(value) != true)) {
                    this.consultationDateField = value;
                    this.RaisePropertyChanged("consultationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.diagnosisField, value) != true)) {
                    this.diagnosisField = value;
                    this.RaisePropertyChanged("diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int doctorID {
            get {
                return this.doctorIDField;
            }
            set {
                if ((this.doctorIDField.Equals(value) != true)) {
                    this.doctorIDField = value;
                    this.RaisePropertyChanged("doctorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int medicalRecordID {
            get {
                return this.medicalRecordIDField;
            }
            set {
                if ((this.medicalRecordIDField.Equals(value) != true)) {
                    this.medicalRecordIDField = value;
                    this.RaisePropertyChanged("medicalRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int patientID {
            get {
                return this.patientIDField;
            }
            set {
                if ((this.patientIDField.Equals(value) != true)) {
                    this.patientIDField = value;
                    this.RaisePropertyChanged("patientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string prescriptions {
            get {
                return this.prescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.prescriptionsField, value) != true)) {
                    this.prescriptionsField = value;
                    this.RaisePropertyChanged("prescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pulseRate {
            get {
                return this.pulseRateField;
            }
            set {
                if ((object.ReferenceEquals(this.pulseRateField, value) != true)) {
                    this.pulseRateField = value;
                    this.RaisePropertyChanged("pulseRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                if ((object.ReferenceEquals(this.remarksField, value) != true)) {
                    this.remarksField = value;
                    this.RaisePropertyChanged("remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string respirationRate {
            get {
                return this.respirationRateField;
            }
            set {
                if ((object.ReferenceEquals(this.respirationRateField, value) != true)) {
                    this.respirationRateField = value;
                    this.RaisePropertyChanged("respirationRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string treatment {
            get {
                return this.treatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.treatmentField, value) != true)) {
                    this.treatmentField = value;
                    this.RaisePropertyChanged("treatment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HealthDeclarationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NricField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HealthDeclaration {
            get {
                return this.HealthDeclarationField;
            }
            set {
                if ((object.ReferenceEquals(this.HealthDeclarationField, value) != true)) {
                    this.HealthDeclarationField = value;
                    this.RaisePropertyChanged("HealthDeclaration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobFunction {
            get {
                return this.JobFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobFunctionField, value) != true)) {
                    this.JobFunctionField = value;
                    this.RaisePropertyChanged("JobFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginID {
            get {
                return this.LoginIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIDField, value) != true)) {
                    this.LoginIDField = value;
                    this.RaisePropertyChanged("LoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityField, value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nric {
            get {
                return this.NricField;
            }
            set {
                if ((object.ReferenceEquals(this.NricField, value) != true)) {
                    this.NricField = value;
                    this.RaisePropertyChanged("Nric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContractRecord", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class ContractRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string benefitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime create_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string employeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string holidaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string salaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vacationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string workingHoursField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string benefits {
            get {
                return this.benefitsField;
            }
            set {
                if ((object.ReferenceEquals(this.benefitsField, value) != true)) {
                    this.benefitsField = value;
                    this.RaisePropertyChanged("benefits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime create_date {
            get {
                return this.create_dateField;
            }
            set {
                if ((this.create_dateField.Equals(value) != true)) {
                    this.create_dateField = value;
                    this.RaisePropertyChanged("create_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string employeeID {
            get {
                return this.employeeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.employeeIDField, value) != true)) {
                    this.employeeIDField = value;
                    this.RaisePropertyChanged("employeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string holidays {
            get {
                return this.holidaysField;
            }
            set {
                if ((object.ReferenceEquals(this.holidaysField, value) != true)) {
                    this.holidaysField = value;
                    this.RaisePropertyChanged("holidays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string salary {
            get {
                return this.salaryField;
            }
            set {
                if ((object.ReferenceEquals(this.salaryField, value) != true)) {
                    this.salaryField = value;
                    this.RaisePropertyChanged("salary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vacation {
            get {
                return this.vacationField;
            }
            set {
                if ((object.ReferenceEquals(this.vacationField, value) != true)) {
                    this.vacationField = value;
                    this.RaisePropertyChanged("vacation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string workingHours {
            get {
                return this.workingHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.workingHoursField, value) != true)) {
                    this.workingHoursField = value;
                    this.RaisePropertyChanged("workingHours");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyDBServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        Hospital_Management_Software.MyDBServiceReference.CompositeType GetDataUsingDataContract(Hospital_Management_Software.MyDBServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.CompositeType> GetDataUsingDataContractAsync(Hospital_Management_Software.MyDBServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEquipmentServiceRecordById", ReplyAction="http://tempuri.org/IService1/GetEquipmentServiceRecordByIdResponse")]
        Hospital_Management_Software.MyDBServiceReference.EquipmentServiceRecord GetEquipmentServiceRecordById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEquipmentServiceRecordById", ReplyAction="http://tempuri.org/IService1/GetEquipmentServiceRecordByIdResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.EquipmentServiceRecord> GetEquipmentServiceRecordByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEquipmentServiceRecordByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetEquipmentServiceRecordByEmployeeIDResponse")]
        Hospital_Management_Software.MyDBServiceReference.EquipmentServiceRecord[] GetEquipmentServiceRecordByEmployeeID(int empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEquipmentServiceRecordByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetEquipmentServiceRecordByEmployeeIDResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.EquipmentServiceRecord[]> GetEquipmentServiceRecordByEmployeeIDAsync(int empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLabServiceRecordById", ReplyAction="http://tempuri.org/IService1/GetLabServiceRecordByIdResponse")]
        Hospital_Management_Software.MyDBServiceReference.LabServiceRecord GetLabServiceRecordById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLabServiceRecordById", ReplyAction="http://tempuri.org/IService1/GetLabServiceRecordByIdResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.LabServiceRecord> GetLabServiceRecordByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLabServiceRecordByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetLabServiceRecordByEmployeeIDResponse")]
        Hospital_Management_Software.MyDBServiceReference.LabServiceRecord[] GetLabServiceRecordByEmployeeID(int empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLabServiceRecordByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetLabServiceRecordByEmployeeIDResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.LabServiceRecord[]> GetLabServiceRecordByEmployeeIDAsync(int empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllResource", ReplyAction="http://tempuri.org/IService1/GetAllResourceResponse")]
        Hospital_Management_Software.MyDBServiceReference.Resource[] GetAllResource();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllResource", ReplyAction="http://tempuri.org/IService1/GetAllResourceResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.Resource[]> GetAllResourceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllRolePermission", ReplyAction="http://tempuri.org/IService1/GetAllRolePermissionResponse")]
        Hospital_Management_Software.MyDBServiceReference.RolePermission[] GetAllRolePermission();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllRolePermission", ReplyAction="http://tempuri.org/IService1/GetAllRolePermissionResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.RolePermission[]> GetAllRolePermissionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMedicalRecord", ReplyAction="http://tempuri.org/IService1/GetAllMedicalRecordResponse")]
        Hospital_Management_Software.MyDBServiceReference.MedicalRecord[] GetAllMedicalRecord();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMedicalRecord", ReplyAction="http://tempuri.org/IService1/GetAllMedicalRecordResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.MedicalRecord[]> GetAllMedicalRecordAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMedicalRecordByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetAllMedicalRecordByEmployeeIDResponse")]
        Hospital_Management_Software.MyDBServiceReference.MedicalRecord[] GetAllMedicalRecordByEmployeeID(int empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMedicalRecordByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetAllMedicalRecordByEmployeeIDResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.MedicalRecord[]> GetAllMedicalRecordByEmployeeIDAsync(int empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEmployee", ReplyAction="http://tempuri.org/IService1/GetAllEmployeeResponse")]
        Hospital_Management_Software.MyDBServiceReference.Employee[] GetAllEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEmployee", ReplyAction="http://tempuri.org/IService1/GetAllEmployeeResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.Employee[]> GetAllEmployeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeByName", ReplyAction="http://tempuri.org/IService1/GetEmployeeByNameResponse")]
        Hospital_Management_Software.MyDBServiceReference.Employee[] GetEmployeeByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeByName", ReplyAction="http://tempuri.org/IService1/GetEmployeeByNameResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.Employee[]> GetEmployeeByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeSortedByDOB", ReplyAction="http://tempuri.org/IService1/GetEmployeeSortedByDOBResponse")]
        Hospital_Management_Software.MyDBServiceReference.Employee[] GetEmployeeSortedByDOB(int order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeSortedByDOB", ReplyAction="http://tempuri.org/IService1/GetEmployeeSortedByDOBResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.Employee[]> GetEmployeeSortedByDOBAsync(int order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeSortedByGender", ReplyAction="http://tempuri.org/IService1/GetEmployeeSortedByGenderResponse")]
        Hospital_Management_Software.MyDBServiceReference.Employee[] GetEmployeeSortedByGender(int order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeSortedByGender", ReplyAction="http://tempuri.org/IService1/GetEmployeeSortedByGenderResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.Employee[]> GetEmployeeSortedByGenderAsync(int order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeByNRIC", ReplyAction="http://tempuri.org/IService1/GetEmployeeByNRICResponse")]
        Hospital_Management_Software.MyDBServiceReference.Employee[] GetEmployeeByNRIC(string nric);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeByNRIC", ReplyAction="http://tempuri.org/IService1/GetEmployeeByNRICResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.Employee[]> GetEmployeeByNRICAsync(string nric);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateEmployee", ReplyAction="http://tempuri.org/IService1/CreateEmployeeResponse")]
        int CreateEmployee(string nric, string firstname, string lastname, string email, System.DateTime dob, char gender, string address, string department, string position, string nationality, string healthdeclaration, string loginid, string password, string jobfunction, string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateEmployee", ReplyAction="http://tempuri.org/IService1/CreateEmployeeResponse")]
        System.Threading.Tasks.Task<int> CreateEmployeeAsync(string nric, string firstname, string lastname, string email, System.DateTime dob, char gender, string address, string department, string position, string nationality, string healthdeclaration, string loginid, string password, string jobfunction, string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEmployee", ReplyAction="http://tempuri.org/IService1/UpdateEmployeeResponse")]
        int UpdateEmployee(string nric, string firstname, string lastname, string email, System.DateTime dob, char gender, string address, string department, string position, string nationality, string healthdeclaration, string loginid, string password, string jobfunction, string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEmployee", ReplyAction="http://tempuri.org/IService1/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<int> UpdateEmployeeAsync(string nric, string firstname, string lastname, string email, System.DateTime dob, char gender, string address, string department, string position, string nationality, string healthdeclaration, string loginid, string password, string jobfunction, string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeID", ReplyAction="http://tempuri.org/IService1/GetEmployeeIDResponse")]
        string GetEmployeeID(string nric);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeID", ReplyAction="http://tempuri.org/IService1/GetEmployeeIDResponse")]
        System.Threading.Tasks.Task<string> GetEmployeeIDAsync(string nric);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateContract", ReplyAction="http://tempuri.org/IService1/CreateContractResponse")]
        int CreateContract(string salary, string benefits, string workingHours, string holidays, string vacation, System.DateTime create_date, string employeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateContract", ReplyAction="http://tempuri.org/IService1/CreateContractResponse")]
        System.Threading.Tasks.Task<int> CreateContractAsync(string salary, string benefits, string workingHours, string holidays, string vacation, System.DateTime create_date, string employeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetContractByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetContractByEmployeeIDResponse")]
        Hospital_Management_Software.MyDBServiceReference.ContractRecord[] GetContractByEmployeeID(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetContractByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetContractByEmployeeIDResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.ContractRecord[]> GetContractByEmployeeIDAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Hospital_Management_Software.MyDBServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Hospital_Management_Software.MyDBServiceReference.IService1>, Hospital_Management_Software.MyDBServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Hospital_Management_Software.MyDBServiceReference.CompositeType GetDataUsingDataContract(Hospital_Management_Software.MyDBServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.CompositeType> GetDataUsingDataContractAsync(Hospital_Management_Software.MyDBServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public Hospital_Management_Software.MyDBServiceReference.EquipmentServiceRecord GetEquipmentServiceRecordById(int id) {
            return base.Channel.GetEquipmentServiceRecordById(id);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.EquipmentServiceRecord> GetEquipmentServiceRecordByIdAsync(int id) {
            return base.Channel.GetEquipmentServiceRecordByIdAsync(id);
        }
        
        public Hospital_Management_Software.MyDBServiceReference.EquipmentServiceRecord[] GetEquipmentServiceRecordByEmployeeID(int empID) {
            return base.Channel.GetEquipmentServiceRecordByEmployeeID(empID);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.EquipmentServiceRecord[]> GetEquipmentServiceRecordByEmployeeIDAsync(int empID) {
            return base.Channel.GetEquipmentServiceRecordByEmployeeIDAsync(empID);
        }
        
        public Hospital_Management_Software.MyDBServiceReference.LabServiceRecord GetLabServiceRecordById(int id) {
            return base.Channel.GetLabServiceRecordById(id);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.LabServiceRecord> GetLabServiceRecordByIdAsync(int id) {
            return base.Channel.GetLabServiceRecordByIdAsync(id);
        }
        
        public Hospital_Management_Software.MyDBServiceReference.LabServiceRecord[] GetLabServiceRecordByEmployeeID(int empID) {
            return base.Channel.GetLabServiceRecordByEmployeeID(empID);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.LabServiceRecord[]> GetLabServiceRecordByEmployeeIDAsync(int empID) {
            return base.Channel.GetLabServiceRecordByEmployeeIDAsync(empID);
        }
        
        public Hospital_Management_Software.MyDBServiceReference.Resource[] GetAllResource() {
            return base.Channel.GetAllResource();
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.Resource[]> GetAllResourceAsync() {
            return base.Channel.GetAllResourceAsync();
        }
        
        public Hospital_Management_Software.MyDBServiceReference.RolePermission[] GetAllRolePermission() {
            return base.Channel.GetAllRolePermission();
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.RolePermission[]> GetAllRolePermissionAsync() {
            return base.Channel.GetAllRolePermissionAsync();
        }
        
        public Hospital_Management_Software.MyDBServiceReference.MedicalRecord[] GetAllMedicalRecord() {
            return base.Channel.GetAllMedicalRecord();
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.MedicalRecord[]> GetAllMedicalRecordAsync() {
            return base.Channel.GetAllMedicalRecordAsync();
        }
        
        public Hospital_Management_Software.MyDBServiceReference.MedicalRecord[] GetAllMedicalRecordByEmployeeID(int empID) {
            return base.Channel.GetAllMedicalRecordByEmployeeID(empID);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.MedicalRecord[]> GetAllMedicalRecordByEmployeeIDAsync(int empID) {
            return base.Channel.GetAllMedicalRecordByEmployeeIDAsync(empID);
        }
        
        public Hospital_Management_Software.MyDBServiceReference.Employee[] GetAllEmployee() {
            return base.Channel.GetAllEmployee();
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.Employee[]> GetAllEmployeeAsync() {
            return base.Channel.GetAllEmployeeAsync();
        }
        
        public Hospital_Management_Software.MyDBServiceReference.Employee[] GetEmployeeByName(string name) {
            return base.Channel.GetEmployeeByName(name);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.Employee[]> GetEmployeeByNameAsync(string name) {
            return base.Channel.GetEmployeeByNameAsync(name);
        }
        
        public Hospital_Management_Software.MyDBServiceReference.Employee[] GetEmployeeSortedByDOB(int order) {
            return base.Channel.GetEmployeeSortedByDOB(order);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.Employee[]> GetEmployeeSortedByDOBAsync(int order) {
            return base.Channel.GetEmployeeSortedByDOBAsync(order);
        }
        
        public Hospital_Management_Software.MyDBServiceReference.Employee[] GetEmployeeSortedByGender(int order) {
            return base.Channel.GetEmployeeSortedByGender(order);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.Employee[]> GetEmployeeSortedByGenderAsync(int order) {
            return base.Channel.GetEmployeeSortedByGenderAsync(order);
        }
        
        public Hospital_Management_Software.MyDBServiceReference.Employee[] GetEmployeeByNRIC(string nric) {
            return base.Channel.GetEmployeeByNRIC(nric);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.Employee[]> GetEmployeeByNRICAsync(string nric) {
            return base.Channel.GetEmployeeByNRICAsync(nric);
        }
        
        public int CreateEmployee(string nric, string firstname, string lastname, string email, System.DateTime dob, char gender, string address, string department, string position, string nationality, string healthdeclaration, string loginid, string password, string jobfunction, string image) {
            return base.Channel.CreateEmployee(nric, firstname, lastname, email, dob, gender, address, department, position, nationality, healthdeclaration, loginid, password, jobfunction, image);
        }
        
        public System.Threading.Tasks.Task<int> CreateEmployeeAsync(string nric, string firstname, string lastname, string email, System.DateTime dob, char gender, string address, string department, string position, string nationality, string healthdeclaration, string loginid, string password, string jobfunction, string image) {
            return base.Channel.CreateEmployeeAsync(nric, firstname, lastname, email, dob, gender, address, department, position, nationality, healthdeclaration, loginid, password, jobfunction, image);
        }
        
        public int UpdateEmployee(string nric, string firstname, string lastname, string email, System.DateTime dob, char gender, string address, string department, string position, string nationality, string healthdeclaration, string loginid, string password, string jobfunction, string image) {
            return base.Channel.UpdateEmployee(nric, firstname, lastname, email, dob, gender, address, department, position, nationality, healthdeclaration, loginid, password, jobfunction, image);
        }
        
        public System.Threading.Tasks.Task<int> UpdateEmployeeAsync(string nric, string firstname, string lastname, string email, System.DateTime dob, char gender, string address, string department, string position, string nationality, string healthdeclaration, string loginid, string password, string jobfunction, string image) {
            return base.Channel.UpdateEmployeeAsync(nric, firstname, lastname, email, dob, gender, address, department, position, nationality, healthdeclaration, loginid, password, jobfunction, image);
        }
        
        public string GetEmployeeID(string nric) {
            return base.Channel.GetEmployeeID(nric);
        }
        
        public System.Threading.Tasks.Task<string> GetEmployeeIDAsync(string nric) {
            return base.Channel.GetEmployeeIDAsync(nric);
        }
        
        public int CreateContract(string salary, string benefits, string workingHours, string holidays, string vacation, System.DateTime create_date, string employeeID) {
            return base.Channel.CreateContract(salary, benefits, workingHours, holidays, vacation, create_date, employeeID);
        }
        
        public System.Threading.Tasks.Task<int> CreateContractAsync(string salary, string benefits, string workingHours, string holidays, string vacation, System.DateTime create_date, string employeeID) {
            return base.Channel.CreateContractAsync(salary, benefits, workingHours, holidays, vacation, create_date, employeeID);
        }
        
        public Hospital_Management_Software.MyDBServiceReference.ContractRecord[] GetContractByEmployeeID(string id) {
            return base.Channel.GetContractByEmployeeID(id);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.MyDBServiceReference.ContractRecord[]> GetContractByEmployeeIDAsync(string id) {
            return base.Channel.GetContractByEmployeeIDAsync(id);
        }
    }
}
