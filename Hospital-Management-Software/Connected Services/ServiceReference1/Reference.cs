//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hospital_Management_Software.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentServiceRecord", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class EquipmentServiceRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int employeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string serialNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int employeeID {
            get {
                return this.employeeIDField;
            }
            set {
                if ((this.employeeIDField.Equals(value) != true)) {
                    this.employeeIDField = value;
                    this.RaisePropertyChanged("employeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string serialNumber {
            get {
                return this.serialNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.serialNumberField, value) != true)) {
                    this.serialNumberField = value;
                    this.RaisePropertyChanged("serialNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LabServiceRecord", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class LabServiceRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int employeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int priorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string testRequiredField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int employeeID {
            get {
                return this.employeeIDField;
            }
            set {
                if ((this.employeeIDField.Equals(value) != true)) {
                    this.employeeIDField = value;
                    this.RaisePropertyChanged("employeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int priority {
            get {
                return this.priorityField;
            }
            set {
                if ((this.priorityField.Equals(value) != true)) {
                    this.priorityField = value;
                    this.RaisePropertyChanged("priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                if ((object.ReferenceEquals(this.remarksField, value) != true)) {
                    this.remarksField = value;
                    this.RaisePropertyChanged("remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string testRequired {
            get {
                return this.testRequiredField;
            }
            set {
                if ((object.ReferenceEquals(this.testRequiredField, value) != true)) {
                    this.testRequiredField = value;
                    this.RaisePropertyChanged("testRequired");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Resource", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class Resource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RolePermission", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class RolePermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool addField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool deleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool editField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int resourceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int roleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool viewField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool add {
            get {
                return this.addField;
            }
            set {
                if ((this.addField.Equals(value) != true)) {
                    this.addField = value;
                    this.RaisePropertyChanged("add");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool delete {
            get {
                return this.deleteField;
            }
            set {
                if ((this.deleteField.Equals(value) != true)) {
                    this.deleteField = value;
                    this.RaisePropertyChanged("delete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool edit {
            get {
                return this.editField;
            }
            set {
                if ((this.editField.Equals(value) != true)) {
                    this.editField = value;
                    this.RaisePropertyChanged("edit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int resourceID {
            get {
                return this.resourceIDField;
            }
            set {
                if ((this.resourceIDField.Equals(value) != true)) {
                    this.resourceIDField = value;
                    this.RaisePropertyChanged("resourceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int roleID {
            get {
                return this.roleIDField;
            }
            set {
                if ((this.roleIDField.Equals(value) != true)) {
                    this.roleIDField = value;
                    this.RaisePropertyChanged("roleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool view {
            get {
                return this.viewField;
            }
            set {
                if ((this.viewField.Equals(value) != true)) {
                    this.viewField = value;
                    this.RaisePropertyChanged("view");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalRecord", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class MedicalRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bloodPressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bodyTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime consultationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string diagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int doctorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int medicalRecordIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int patientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string prescriptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pulseRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string remarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string respirationRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string treatmentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bloodPressure {
            get {
                return this.bloodPressureField;
            }
            set {
                if ((object.ReferenceEquals(this.bloodPressureField, value) != true)) {
                    this.bloodPressureField = value;
                    this.RaisePropertyChanged("bloodPressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bodyTemperature {
            get {
                return this.bodyTemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.bodyTemperatureField, value) != true)) {
                    this.bodyTemperatureField = value;
                    this.RaisePropertyChanged("bodyTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime consultationDate {
            get {
                return this.consultationDateField;
            }
            set {
                if ((this.consultationDateField.Equals(value) != true)) {
                    this.consultationDateField = value;
                    this.RaisePropertyChanged("consultationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string diagnosis {
            get {
                return this.diagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.diagnosisField, value) != true)) {
                    this.diagnosisField = value;
                    this.RaisePropertyChanged("diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int doctorID {
            get {
                return this.doctorIDField;
            }
            set {
                if ((this.doctorIDField.Equals(value) != true)) {
                    this.doctorIDField = value;
                    this.RaisePropertyChanged("doctorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int medicalRecordID {
            get {
                return this.medicalRecordIDField;
            }
            set {
                if ((this.medicalRecordIDField.Equals(value) != true)) {
                    this.medicalRecordIDField = value;
                    this.RaisePropertyChanged("medicalRecordID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int patientID {
            get {
                return this.patientIDField;
            }
            set {
                if ((this.patientIDField.Equals(value) != true)) {
                    this.patientIDField = value;
                    this.RaisePropertyChanged("patientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string prescriptions {
            get {
                return this.prescriptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.prescriptionsField, value) != true)) {
                    this.prescriptionsField = value;
                    this.RaisePropertyChanged("prescriptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pulseRate {
            get {
                return this.pulseRateField;
            }
            set {
                if ((object.ReferenceEquals(this.pulseRateField, value) != true)) {
                    this.pulseRateField = value;
                    this.RaisePropertyChanged("pulseRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                if ((object.ReferenceEquals(this.remarksField, value) != true)) {
                    this.remarksField = value;
                    this.RaisePropertyChanged("remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string respirationRate {
            get {
                return this.respirationRateField;
            }
            set {
                if ((object.ReferenceEquals(this.respirationRateField, value) != true)) {
                    this.respirationRateField = value;
                    this.RaisePropertyChanged("respirationRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string treatment {
            get {
                return this.treatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.treatmentField, value) != true)) {
                    this.treatmentField = value;
                    this.RaisePropertyChanged("treatment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientRecord", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service_Library.Entity")]
    [System.SerializableAttribute()]
    public partial class PatientRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NRICField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string allergiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string citizenshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createdDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string homeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string medicalHistoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nationalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string patientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string postalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime updatedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NRIC {
            get {
                return this.NRICField;
            }
            set {
                if ((object.ReferenceEquals(this.NRICField, value) != true)) {
                    this.NRICField = value;
                    this.RaisePropertyChanged("NRIC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string allergies {
            get {
                return this.allergiesField;
            }
            set {
                if ((object.ReferenceEquals(this.allergiesField, value) != true)) {
                    this.allergiesField = value;
                    this.RaisePropertyChanged("allergies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string citizenship {
            get {
                return this.citizenshipField;
            }
            set {
                if ((object.ReferenceEquals(this.citizenshipField, value) != true)) {
                    this.citizenshipField = value;
                    this.RaisePropertyChanged("citizenship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createdDate {
            get {
                return this.createdDateField;
            }
            set {
                if ((this.createdDateField.Equals(value) != true)) {
                    this.createdDateField = value;
                    this.RaisePropertyChanged("createdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string homeNumber {
            get {
                return this.homeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.homeNumberField, value) != true)) {
                    this.homeNumberField = value;
                    this.RaisePropertyChanged("homeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string medicalHistory {
            get {
                return this.medicalHistoryField;
            }
            set {
                if ((object.ReferenceEquals(this.medicalHistoryField, value) != true)) {
                    this.medicalHistoryField = value;
                    this.RaisePropertyChanged("medicalHistory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nationality {
            get {
                return this.nationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.nationalityField, value) != true)) {
                    this.nationalityField = value;
                    this.RaisePropertyChanged("nationality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string patientID {
            get {
                return this.patientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.patientIDField, value) != true)) {
                    this.patientIDField = value;
                    this.RaisePropertyChanged("patientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneNumberField, value) != true)) {
                    this.phoneNumberField = value;
                    this.RaisePropertyChanged("phoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.postalCodeField, value) != true)) {
                    this.postalCodeField = value;
                    this.RaisePropertyChanged("postalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sex {
            get {
                return this.sexField;
            }
            set {
                if ((object.ReferenceEquals(this.sexField, value) != true)) {
                    this.sexField = value;
                    this.RaisePropertyChanged("sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime updatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                if ((this.updatedDateField.Equals(value) != true)) {
                    this.updatedDateField = value;
                    this.RaisePropertyChanged("updatedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        Hospital_Management_Software.ServiceReference1.CompositeType GetDataUsingDataContract(Hospital_Management_Software.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(Hospital_Management_Software.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEquipmentServiceRecordById", ReplyAction="http://tempuri.org/IService1/GetEquipmentServiceRecordByIdResponse")]
        Hospital_Management_Software.ServiceReference1.EquipmentServiceRecord GetEquipmentServiceRecordById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEquipmentServiceRecordById", ReplyAction="http://tempuri.org/IService1/GetEquipmentServiceRecordByIdResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.EquipmentServiceRecord> GetEquipmentServiceRecordByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEquipmentServiceRecordByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetEquipmentServiceRecordByEmployeeIDResponse")]
        Hospital_Management_Software.ServiceReference1.EquipmentServiceRecord[] GetEquipmentServiceRecordByEmployeeID(int empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEquipmentServiceRecordByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetEquipmentServiceRecordByEmployeeIDResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.EquipmentServiceRecord[]> GetEquipmentServiceRecordByEmployeeIDAsync(int empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLabServiceRecordById", ReplyAction="http://tempuri.org/IService1/GetLabServiceRecordByIdResponse")]
        Hospital_Management_Software.ServiceReference1.LabServiceRecord GetLabServiceRecordById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLabServiceRecordById", ReplyAction="http://tempuri.org/IService1/GetLabServiceRecordByIdResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.LabServiceRecord> GetLabServiceRecordByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLabServiceRecordByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetLabServiceRecordByEmployeeIDResponse")]
        Hospital_Management_Software.ServiceReference1.LabServiceRecord[] GetLabServiceRecordByEmployeeID(int empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetLabServiceRecordByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetLabServiceRecordByEmployeeIDResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.LabServiceRecord[]> GetLabServiceRecordByEmployeeIDAsync(int empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllResource", ReplyAction="http://tempuri.org/IService1/GetAllResourceResponse")]
        Hospital_Management_Software.ServiceReference1.Resource[] GetAllResource();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllResource", ReplyAction="http://tempuri.org/IService1/GetAllResourceResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.Resource[]> GetAllResourceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllRolePermission", ReplyAction="http://tempuri.org/IService1/GetAllRolePermissionResponse")]
        Hospital_Management_Software.ServiceReference1.RolePermission[] GetAllRolePermission();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllRolePermission", ReplyAction="http://tempuri.org/IService1/GetAllRolePermissionResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.RolePermission[]> GetAllRolePermissionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMedicalRecord", ReplyAction="http://tempuri.org/IService1/GetAllMedicalRecordResponse")]
        Hospital_Management_Software.ServiceReference1.MedicalRecord[] GetAllMedicalRecord();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMedicalRecord", ReplyAction="http://tempuri.org/IService1/GetAllMedicalRecordResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.MedicalRecord[]> GetAllMedicalRecordAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMedicalRecordByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetAllMedicalRecordByEmployeeIDResponse")]
        Hospital_Management_Software.ServiceReference1.MedicalRecord[] GetAllMedicalRecordByEmployeeID(int empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllMedicalRecordByEmployeeID", ReplyAction="http://tempuri.org/IService1/GetAllMedicalRecordByEmployeeIDResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.MedicalRecord[]> GetAllMedicalRecordByEmployeeIDAsync(int empID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllPatientRecords", ReplyAction="http://tempuri.org/IService1/GetAllPatientRecordsResponse")]
        Hospital_Management_Software.ServiceReference1.PatientRecord[] GetAllPatientRecords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllPatientRecords", ReplyAction="http://tempuri.org/IService1/GetAllPatientRecordsResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.PatientRecord[]> GetAllPatientRecordsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPatientRecordByID", ReplyAction="http://tempuri.org/IService1/GetPatientRecordByIDResponse")]
        Hospital_Management_Software.ServiceReference1.PatientRecord GetPatientRecordByID(string patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPatientRecordByID", ReplyAction="http://tempuri.org/IService1/GetPatientRecordByIDResponse")]
        System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.PatientRecord> GetPatientRecordByIDAsync(string patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreatePatientRecord", ReplyAction="http://tempuri.org/IService1/CreatePatientRecordResponse")]
        int CreatePatientRecord(
                    string patientid, 
                    string firstname, 
                    string lastname, 
                    string NRIC, 
                    System.DateTime DOB, 
                    int age, 
                    string sex, 
                    string nationality, 
                    string citizenship, 
                    string postalcode, 
                    string address, 
                    string allergies, 
                    string medicalhistory, 
                    string phonenumber, 
                    string homenumber, 
                    string email, 
                    System.DateTime createdDate, 
                    System.DateTime updateDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreatePatientRecord", ReplyAction="http://tempuri.org/IService1/CreatePatientRecordResponse")]
        System.Threading.Tasks.Task<int> CreatePatientRecordAsync(
                    string patientid, 
                    string firstname, 
                    string lastname, 
                    string NRIC, 
                    System.DateTime DOB, 
                    int age, 
                    string sex, 
                    string nationality, 
                    string citizenship, 
                    string postalcode, 
                    string address, 
                    string allergies, 
                    string medicalhistory, 
                    string phonenumber, 
                    string homenumber, 
                    string email, 
                    System.DateTime createdDate, 
                    System.DateTime updateDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Hospital_Management_Software.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Hospital_Management_Software.ServiceReference1.IService1>, Hospital_Management_Software.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Hospital_Management_Software.ServiceReference1.CompositeType GetDataUsingDataContract(Hospital_Management_Software.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(Hospital_Management_Software.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public Hospital_Management_Software.ServiceReference1.EquipmentServiceRecord GetEquipmentServiceRecordById(int id) {
            return base.Channel.GetEquipmentServiceRecordById(id);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.EquipmentServiceRecord> GetEquipmentServiceRecordByIdAsync(int id) {
            return base.Channel.GetEquipmentServiceRecordByIdAsync(id);
        }
        
        public Hospital_Management_Software.ServiceReference1.EquipmentServiceRecord[] GetEquipmentServiceRecordByEmployeeID(int empID) {
            return base.Channel.GetEquipmentServiceRecordByEmployeeID(empID);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.EquipmentServiceRecord[]> GetEquipmentServiceRecordByEmployeeIDAsync(int empID) {
            return base.Channel.GetEquipmentServiceRecordByEmployeeIDAsync(empID);
        }
        
        public Hospital_Management_Software.ServiceReference1.LabServiceRecord GetLabServiceRecordById(int id) {
            return base.Channel.GetLabServiceRecordById(id);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.LabServiceRecord> GetLabServiceRecordByIdAsync(int id) {
            return base.Channel.GetLabServiceRecordByIdAsync(id);
        }
        
        public Hospital_Management_Software.ServiceReference1.LabServiceRecord[] GetLabServiceRecordByEmployeeID(int empID) {
            return base.Channel.GetLabServiceRecordByEmployeeID(empID);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.LabServiceRecord[]> GetLabServiceRecordByEmployeeIDAsync(int empID) {
            return base.Channel.GetLabServiceRecordByEmployeeIDAsync(empID);
        }
        
        public Hospital_Management_Software.ServiceReference1.Resource[] GetAllResource() {
            return base.Channel.GetAllResource();
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.Resource[]> GetAllResourceAsync() {
            return base.Channel.GetAllResourceAsync();
        }
        
        public Hospital_Management_Software.ServiceReference1.RolePermission[] GetAllRolePermission() {
            return base.Channel.GetAllRolePermission();
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.RolePermission[]> GetAllRolePermissionAsync() {
            return base.Channel.GetAllRolePermissionAsync();
        }
        
        public Hospital_Management_Software.ServiceReference1.MedicalRecord[] GetAllMedicalRecord() {
            return base.Channel.GetAllMedicalRecord();
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.MedicalRecord[]> GetAllMedicalRecordAsync() {
            return base.Channel.GetAllMedicalRecordAsync();
        }
        
        public Hospital_Management_Software.ServiceReference1.MedicalRecord[] GetAllMedicalRecordByEmployeeID(int empID) {
            return base.Channel.GetAllMedicalRecordByEmployeeID(empID);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.MedicalRecord[]> GetAllMedicalRecordByEmployeeIDAsync(int empID) {
            return base.Channel.GetAllMedicalRecordByEmployeeIDAsync(empID);
        }
        
        public Hospital_Management_Software.ServiceReference1.PatientRecord[] GetAllPatientRecords() {
            return base.Channel.GetAllPatientRecords();
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.PatientRecord[]> GetAllPatientRecordsAsync() {
            return base.Channel.GetAllPatientRecordsAsync();
        }
        
        public Hospital_Management_Software.ServiceReference1.PatientRecord GetPatientRecordByID(string patientID) {
            return base.Channel.GetPatientRecordByID(patientID);
        }
        
        public System.Threading.Tasks.Task<Hospital_Management_Software.ServiceReference1.PatientRecord> GetPatientRecordByIDAsync(string patientID) {
            return base.Channel.GetPatientRecordByIDAsync(patientID);
        }
        
        public int CreatePatientRecord(
                    string patientid, 
                    string firstname, 
                    string lastname, 
                    string NRIC, 
                    System.DateTime DOB, 
                    int age, 
                    string sex, 
                    string nationality, 
                    string citizenship, 
                    string postalcode, 
                    string address, 
                    string allergies, 
                    string medicalhistory, 
                    string phonenumber, 
                    string homenumber, 
                    string email, 
                    System.DateTime createdDate, 
                    System.DateTime updateDate) {
            return base.Channel.CreatePatientRecord(patientid, firstname, lastname, NRIC, DOB, age, sex, nationality, citizenship, postalcode, address, allergies, medicalhistory, phonenumber, homenumber, email, createdDate, updateDate);
        }
        
        public System.Threading.Tasks.Task<int> CreatePatientRecordAsync(
                    string patientid, 
                    string firstname, 
                    string lastname, 
                    string NRIC, 
                    System.DateTime DOB, 
                    int age, 
                    string sex, 
                    string nationality, 
                    string citizenship, 
                    string postalcode, 
                    string address, 
                    string allergies, 
                    string medicalhistory, 
                    string phonenumber, 
                    string homenumber, 
                    string email, 
                    System.DateTime createdDate, 
                    System.DateTime updateDate) {
            return base.Channel.CreatePatientRecordAsync(patientid, firstname, lastname, NRIC, DOB, age, sex, nationality, citizenship, postalcode, address, allergies, medicalhistory, phonenumber, homenumber, email, createdDate, updateDate);
        }
    }
}
